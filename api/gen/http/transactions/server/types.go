// Code generated by goa v3.14.1, DO NOT EDIT.
//
// transactions HTTP server types
//
// Command:
// $ goa gen djjuhasz/expenses/api/design --output api

package server

import (
	transactions "djjuhasz/expenses/api/gen/transactions"
)

// TransactionCollection is the type of the "transactions" service
// "transactions" endpoint HTTP response body.
type TransactionCollection []*Transaction

// Transaction is used to define fields on response body types.
type Transaction struct {
	// Identifier.
	ID string `form:"id" json:"id" xml:"id"`
	// Account name.
	Account *string `form:"account,omitempty" json:"account,omitempty" xml:"account,omitempty"`
	// Date posted.
	DatePosted string `form:"date_posted" json:"date_posted" xml:"date_posted"`
	// Cheque number.
	ChequeNo *int `form:"cheque_no,omitempty" json:"cheque_no,omitempty" xml:"cheque_no,omitempty"`
	// Payee name.
	Payee *string `form:"payee,omitempty" json:"payee,omitempty" xml:"payee,omitempty"`
	// Category.
	Category string `form:"category" json:"category" xml:"category"`
	// Notes.
	Notes *string `form:"notes,omitempty" json:"notes,omitempty" xml:"notes,omitempty"`
	// Dollar amount.
	Amount float32 `form:"amount" json:"amount" xml:"amount"`
}

// NewTransactionCollection builds the HTTP response body from the result of
// the "transactions" endpoint of the "transactions" service.
func NewTransactionCollection(res *transactions.TransactionsResult) TransactionCollection {
	body := make([]*Transaction, len(res.Transactions))
	for i, val := range res.Transactions {
		body[i] = marshalTransactionsTransactionToTransaction(val)
	}
	return body
}
