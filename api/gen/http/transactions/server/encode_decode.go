// Code generated by goa v3.14.1, DO NOT EDIT.
//
// transactions HTTP server encoders and decoders
//
// Command:
// $ goa gen djjuhasz/expenses/api/design --output api

package server

import (
	"context"
	transactions "djjuhasz/expenses/api/gen/transactions"
	"net/http"

	goahttp "goa.design/goa/v3/http"
)

// EncodeTransactionsResponse returns an encoder for responses returned by the
// transactions transactions endpoint.
func EncodeTransactionsResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, any) error {
	return func(ctx context.Context, w http.ResponseWriter, v any) error {
		res, _ := v.(*transactions.TransactionsResult)
		enc := encoder(ctx, w)
		body := NewTransactionCollection(res)
		if res.Marker != nil {
			w.Header().Set("Marker", *res.Marker)
		}
		w.WriteHeader(http.StatusOK)
		return enc.Encode(body)
	}
}

// marshalTransactionsTransactionToTransaction builds a value of type
// *Transaction from a value of type *transactions.Transaction.
func marshalTransactionsTransactionToTransaction(v *transactions.Transaction) *Transaction {
	res := &Transaction{
		ID:         v.ID,
		Account:    v.Account,
		DatePosted: v.DatePosted,
		ChequeNo:   v.ChequeNo,
		Payee:      v.Payee,
		Category:   v.Category,
		Notes:      v.Notes,
		Amount:     v.Amount,
	}

	return res
}
